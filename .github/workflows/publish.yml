name: "Publish Package"

on:
    release:
        types: [created]

jobs:
    test-build:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest]
                node-version: [20.x]

        steps:
            - uses: actions/checkout@v2

            - name: Setup Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install Dependencies
              run: rm -rf node_modules; yarn cache clean; yarn;

    release:
        runs-on: ubuntu-latest
        needs: [test-build]

        steps:
            # Checkout the exact commit tagged on the release.
            - name: Checkout repo
              uses: actions/checkout@v2
              with:
                  ref: ${{ github.event.release.target_commitish }}

            - name: Validate and extract release information
              id: release
              uses: manovotny/github-releases-for-automated-package-publishing-action@v1.0.0

            - name: Set node version
              uses: actions/setup-node@v2
              with:
                  always-auth: true
                  node-version: "20.x"
                  registry-url: "https://registry.npmjs.org"

            - name: Setup pnpm
              uses: pnpm/action-setup@v3 # docs https://pnpm.io/continuous-integration#github-actions
              with:
                  version: 8 # Optional: specify a pnpm versio

            - name: install deps
              run: pnpm i

            - name: build
              run: pnpm build

            - name: Publish tagged version
              if: steps.release.outputs.tag != ''
              run: pnpm version --no-git-tag-version ${{ steps.release.outputs.version }} && pnpm publish --tag ${{ steps.release.outputs.tag }} --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish version
              if: steps.release.outputs.tag == ''
              run: pnpm version --no-git-tag-version ${{ steps.release.outputs.version }} && pnpm publish --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
